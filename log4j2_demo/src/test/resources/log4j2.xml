<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="debug" monitorInterval="30">

    <!--
       配置集中属性进行管理
       使用时通过：${name}
    -->
    <properties>
        <!-- 定义日志的根目录 -->
        <property name="LOG_HOME" value="./log" />
    </properties>

    <!--先定义所有的日志处理器 appender-->
    <appenders>
        <!--这个输出控制台的配置-->
        <console name="Console" target="SYSTEM_ERR"><!--SYSTEM_ERR 为红色-->
            <!--输出日志的格式-->
            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%t] [%-5level] %c{36}:%L --- %m%n"/>
        </console>

        <!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用-->
        <File name="file" fileName="${LOG_HOME}/test.log" append="true"><!--设置为true则不清空-->
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %c{36}:%L %M - %msg%xEx%n"/>
        </File>

        <!--异步日志 appender-->
<!--        <Async name="AsyncFile">
            <AppenderRef ref="file"/>
        </Async>-->

        <!--随机读写流的日志文件输出appender，性能提高-->
        <RandomAccessFile name="accessFile" fileName="${LOG_HOME}/myAccess.log">
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %c{36} --- %m%n"/>
        </RandomAccessFile>

        <!-- 按照一定规则拆分的日志文件-->
        <RollingFile name="rollingFile" fileName="${LOG_HOME}/myRoll.log"
                     filePattern="${LOG_HOME}/rollFileLog/$${date:yyyy-MM-dd}/myRollLog-%d{yyyy-MM-dd-HH-mm}-%i.log">
            <!--日志级别过滤器 控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%-5level] %l %c{36} --- %m%n"/>
            <Policies>
                <!--在系统启动时，触发拆分规则，产生一个新的日志文件-->
                <OnStartupTriggeringPolicy/>
                <!--按照时间节点拆分 规则根据filePattern-->
                <TimeBasedTriggeringPolicy/>
                <!--按照文件大小进行拆分-->
                <SizeBasedTriggeringPolicy size="10 MB"/>
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->
            <DefaultRolloverStrategy max="20"/>
        </RollingFile>

    </appenders>

    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
<!--        <logger name="org.springframework" level="INFO"></logger>
        <logger name="org.mybatis" level="INFO"></logger>-->
        <root level="all">
            <appender-ref ref="Console"/>
            <!--使用异步Appender-->
            <!--<appender-ref ref="AsyncFile"/>-->
        </root>

        <!--自定义异步logger对象
        includeLocation="false" 关闭日志的行号信息，开启会导致性能不如同步日志
        additivity="false" 不再继承RootLogger对象-->
        <AsyncLogger name="com.code" level="trace" includeLocation="false" additivity="false">
            <AppenderRef ref="Console"></AppenderRef>
        </AsyncLogger>
    </loggers>
</configuration>